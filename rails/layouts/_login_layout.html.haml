.card#login
  = form_tag login_form_path_string, :id => 'login_form', :method => "post", :remote => true do
    %fieldset.primary
      = label_tag :username, get_string(:username)
      = text_field_tag :username, params[:username], :class => 'username', :id => "username"
    %fieldset.primary
      = label_tag :password, get_string(:password)
      = password_field_tag :password, params[:password], :class => 'password', :id => 'password-input'
    %div.group.secondary_actions
      %span
        = recovery_strings
    = submit_tag get_string(:login), :class => "button fr", :id => 'login_btn'
    .spinner

.card.slidable#username_recovery{:class => ("slid" if params[:card] == "username_recovery")}
  .return_link_container
    = link_to login_path_string, :class => "return_link", :id => "username_recovery_return_link" do
      %i.left_arrow_icon_black
  %h2
    = get_string(:username_unknown)
  %p
    = get_string(:username_unknown_info)
  = form_tag new_username_recoveries_form_path_string, :method => :post, :id => "username_recovery_form", :remote => true do
    %fieldset.primary
      = label_tag :email, get_string(:email_address)
      = text_field_tag :email, params[:email]
    = submit_tag get_string(:send_login), :class => 'button fr'

.card.slidable#password_reset{:class => ("slid" if params[:card] == "password_reset")}
  .return_link_container
    = link_to login_path_string, :class => "return_link", :id => "password_reset_return_link" do
      %i.left_arrow_icon_black
  %h2
    = get_string(:password_unknown)
  %p
    = get_string(:password_unknown_info)
  = form_tag new_password_resets_form_path_string, :method => :post, :id => "password_reset_form", :remote => true do
    %fieldset.primary
      = label_tag :username, get_string(:username)
      = text_field_tag :username, params[:username]
    %fieldset.primary
      = label_tag :email, get_string(:email_address)
      = text_field_tag :email, params[:email]
    = submit_tag get_string(:reset_password), :class => 'button fr'

- if content_for?(:interstitial)
  .card.slidable#interstitial{:class => ("slid" if params[:card] == "interstitial")}
    = yield :interstitial
